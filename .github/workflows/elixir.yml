name: Elixir CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build, lint, test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: geo_tracker_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: "1.10.3" # Define the elixir version [required]
          otp-version: "22.3" # Define the OTP version [required]

      - name: Restore dependencies cache
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}

      - name: Install dependencies
        run: mix deps.get

      - name: Compile
        run: mix compile --warnings-as-errors

      - name: Check formatting
        run: mix format --check-formatted

      - name: Restore dialyzer plot
        uses: actions/cache@v1
        id: plt-cache
        with:
          path: _build/test
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer --halt-exit-status

      - name: Credo
        run: mix credo --strict

      - name: Run tests
        run: mix test
